<Window x:Class="HTBGamesLauncher.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HTBGamesLauncher"
        mc:Ignorable="d"
        Height="600" Width="1275"
        FontFamily="Helvetica Neue"
        x:Name="login"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="#080808"
        WindowStartupLocation="CenterScreen"
        Title="Login"
        MouseDown="login_MouseDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Rounded" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#00b7ff"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0082b5"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="Transparent" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            FlowDirection="RightToLeft"
            Margin="5">
            <Button
                x:Name="CloseButton"
                Style="{StaticResource WindowButtonsStyle}"
                Content="{StaticResource close_ico}"
                Click="Button_Click"
                Tag="IsCloseButton"/>
            <Button
                x:Name="RestoreButton"
                Margin="10,0"
                Click="RestoreButton_Click"
                Tag="IsCloseButton">
                <Button.Style>
                    <Style
                    TargetType="{x:Type Button}"
                    BasedOn="{StaticResource WindowButtonsStyle}">
                        <Setter Property="Content" Value="{StaticResource restore_ico}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=login, Path=WindowState}" Value="Maximized">
                                <Setter Property="Content" Value="{StaticResource maximize_ico}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                x:Name="MinimizeButton"
                Style="{StaticResource WindowButtonsStyle}"
                Content="{StaticResource minimize_ico}"
                Click="MinimizeButton_Click"/>
        </StackPanel>
        <Image
            Source="Assets/banner_htbin.jpg"
            Stretch="Uniform"
            HorizontalAlignment="Left"
            Visibility="Visible"/>

        <Image
            Height="40"
            Source="Assets/HTB_TV_Logo.png"
            Stretch="Uniform" 
            HorizontalAlignment="Left"
            Margin="296,36,0,524"
            Visibility="Visible"/>

        <TextBlock
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        Margin="373,35,0,0"
        Foreground="White"
        FontSize="16"
        FontWeight="Thin"
        Text="HTB Games Launcher"/>

        <TextBlock
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        Margin="373,59,0,0"
        Foreground="White"
        FontSize="25"
        FontWeight="Thin"
        Text="Sign In"/>

        <Line
            X1="300" Y1="110"
            X2="1200" Y2="110"
            Stroke="Gray"
            StrokeThickness="1"/>

        <TextBox Margin="315,190,302,371"
                 Text="E-mail"
                 FontSize="20"
                 VerticalContentAlignment="Center"
                 Background="Black"
                 Foreground="Gray"/>
        <PasswordBox Margin="315,252,302,309"
                     FontSize="20"
                     VerticalContentAlignment="Center"
                     Background="Black"
                     Foreground="Gray"/>
        <CheckBox Foreground="White" FontSize="14" Background="Black" Content="Remember Me" Padding="10,0,0,0" HorizontalAlignment="Left" Margin="315,300,0,0" VerticalAlignment="Top"/>
        <CheckBox Foreground="White" FontSize="14" Background="Black" Content="Auto sign-in" Padding="10,0,0,0" HorizontalAlignment="Left" Margin="447,300,0,0" VerticalAlignment="Top"/>
        <Button Style="{DynamicResource Rounded}" Content="Sign In" FontSize="20" Background="White" HorizontalAlignment="Left" Margin="814,308,0,0" VerticalAlignment="Top" Height="34" Width="159"/>
        <Button x:Name="localModeBtn"  Style="{DynamicResource Transparent}" Content="Sign In Later" FontSize="15" Margin="869,347,302,229" Click="localModeBtn_Click" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFFCF9F9"/>


    </Grid>
</Window>
